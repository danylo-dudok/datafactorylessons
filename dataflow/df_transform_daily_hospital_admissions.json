{
	"name": "df_transform_daily_hospital_admissions",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_hospital_admissions",
						"type": "DatasetReference"
					},
					"name": "HospitalAdmissionsSource"
				},
				{
					"dataset": {
						"referenceName": "ds_country_lookup",
						"type": "DatasetReference"
					},
					"name": "CountryCodes"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_daily_hospital_admissions",
						"type": "DatasetReference"
					},
					"name": "Sink"
				}
			],
			"transformations": [
				{
					"name": "SelectRequiredFields"
				},
				{
					"name": "CountryCodesLoookup"
				},
				{
					"name": "OccupancyCounts"
				},
				{
					"name": "SelectSinkFields"
				},
				{
					"name": "SortByCountryAndDate"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as integer,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> HospitalAdmissionsSource",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CountryCodes",
				"HospitalAdmissionsSource select(mapColumn(",
				"          country,",
				"          indicator,",
				"          reported_date = date,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectRequiredFields",
				"SelectRequiredFields, CountryCodes lookup(SelectRequiredFields@country == CountryCodes@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> CountryCodesLoookup",
				"CountryCodesLoookup pivot(groupBy(SelectRequiredFields@country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_date,",
				"          source),",
				"     pivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),",
				"     value = sum(value),",
				"     columnNaming: '$N$V',",
				"     lateral: true) ~> OccupancyCounts",
				"OccupancyCounts select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_date,",
				"          hospital_occupancy_count = {valueDaily hospital occupancy},",
				"          icu_occupancy_count = {valueDaily ICU occupancy},",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectSinkFields",
				"SelectSinkFields sort(asc(country, true),",
				"     asc(reported_date, true)) ~> SortByCountryAndDate",
				"SortByCountryAndDate sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Sink"
			]
		}
	}
}